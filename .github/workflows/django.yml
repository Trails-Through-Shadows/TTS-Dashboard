name: Django Admin

on:
  push:
    branches:
      - 'master'
      - 'development'
  pull_request:
    branches:
      - 'master'
      - 'development'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.5
        env:
          MARIADB_ROOT_PASSWORD: ourMasterPassword
          MYSQL_DATABASE: tts_dash
          MYSQL_USER: ttsCommie
          MYSQL_PASSWORD: ourPassword
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Environment settings
        run: |
          cp .env.example .env
          awk -v var="SECRET_KEY=django-insecure-2!@#4qwer" '/^SECRET_KEY=/{print var; next} 1' .env > temp && mv temp .env
          awk -v var="DB_ENGINE=mysql"        '/^DB_ENGINE=/{print var; next} 1' .env > temp && mv temp .env
          awk -v var="DB_HOST=127.0.0.1"      '/^DB_HOST=/{print var; next} 1' .env > temp && mv temp .env
          awk -v var="DB_USERNAME=ttsCommie"  '/^DB_USERNAME=/{print var; next} 1' .env > temp && mv temp .env
          awk -v var="DB_NAME=tts_dash"       '/^DB_NAME=/{print var; next} 1' .env > temp && mv temp .env
          awk -v var="DB_PASS=ourPassword"    '/^DB_PASS=/{print var; next} 1' .env > temp && mv temp .env

      - name: Apply migrations
        run: |
          python manage.py migrate

      - name: Run tests
        run: |
          python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: [ test ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Execute SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            cd /srv/tts-game/TTS-Dashboard 
            eval $(keychain --eval ../.ssh/dashboard-key)
            git pull origin master
            service tts-dashboard restart